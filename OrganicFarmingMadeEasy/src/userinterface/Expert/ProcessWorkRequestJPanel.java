/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Expert;

import Business.UserAccount.UserAccount;
import Business.WorkQueue.OrganicCertificationWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author raunak
 */
public class ProcessWorkRequestJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    OrganicCertificationWorkRequest request;
    UserAccount userAccount;
    /**
     * Creates new form ProcessWorkRequestJPanel
     */
    public ProcessWorkRequestJPanel(JPanel userProcessContainer, OrganicCertificationWorkRequest request,UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = request;
        this.userAccount = userAccount;
        txtSoilType.setText(request.getOrganicCertification().getSoilType().getValue());
        txtSoilStructure.setText(request.getOrganicCertification().getSoilStructure().getValue());
        if(request.getOrganicCertification().isUsedFertilizersInLastThreeYears()){
//            System.out.println("xjshdxjsxj");
            txtFertilizer.setText("Yes");
        }else
            txtFertilizer.setText("No");
//        txtFertilizer.setText(String.valueOf(request.getOrganicCertification().isUsedFertilizersInLastThreeYears()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnApprove = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtSoilType = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSoilStructure = new javax.swing.JTextField();
        txtFertilizer = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        btnApprove.setBackground(new java.awt.Color(255, 255, 255));
        btnApprove.setText("Approve Request");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });

        jLabel1.setText("Soil Type:");

        btnBack.setBackground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnReject.setBackground(new java.awt.Color(255, 255, 255));
        btnReject.setText("Reject Request");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        jLabel2.setText("Soil Structure:");

        jLabel3.setText("Used Fertilizer in the last three years:");

        jPanel1.setBackground(new java.awt.Color(47, 72, 147));

        jLabel4.setFont(new java.awt.Font("Malayalam MN", 0, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Process Organic Certification Request");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Approve/Reject Organic Certification Requests");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(488, 488, 488)
                        .addComponent(jLabel5)))
                .addContainerGap(704, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(62, 62, 62))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99)
                        .addComponent(btnApprove)
                        .addGap(46, 46, 46)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtSoilType, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                        .addComponent(txtSoilStructure)
                        .addComponent(txtFertilizer))
                    .addComponent(btnReject, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel2)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSoilType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addComponent(txtSoilStructure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFertilizer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnApprove, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReject, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(171, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ExpertWorkAreaJPanel dwjp = (ExpertWorkAreaJPanel) component;
        dwjp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        //request.setTestResult(resultJTextField.getText());
        String errorMsg = "";
        boolean st = true;
        if(!(request.getOrganicCertification().getSoilType().getValue().equalsIgnoreCase("Fertile Soil") ||
            request.getOrganicCertification().getSoilType().getValue().equalsIgnoreCase("Nutricious Soil"))){
            st = false;
            System.out.println(st);
            errorMsg += "Soil Type cannot be Sandy or Slit\n ";
        }
        
        boolean ss = true;
        if(!(request.getOrganicCertification().getSoilStructure().getValue().equalsIgnoreCase("Granular") ||
            request.getOrganicCertification().getSoilStructure().getValue().equalsIgnoreCase("Crumb"))){
            ss = false;
            System.out.println(ss);
            errorMsg += "Soil Structure cannot be Columns/Blocky/Plate-Like\n";
        }
        
        boolean ifFerti = true;
        if(request.getOrganicCertification().isUsedFertilizersInLastThreeYears()){
            ifFerti = false;
            System.out.println(ifFerti);
            errorMsg += "Should not use Fertilizer in last three years";
        }
        
        
        
//        if(errorMsg.length()==0){
//            request.setIsCertified(true);
//            request.setStatus("Completed");
//            JOptionPane.showMessageDialog(null, "Request Approved");
//        }
        if(st && ss && ifFerti){
            request.setIsCertified(true);
            request.setStatus("Completed");
            request.setReceiver(userAccount);
            JOptionPane.showMessageDialog(null, "Request Approved");
        }
        else if(request.getStatus().equalsIgnoreCase("Completed"))
        {
            JOptionPane.showMessageDialog(null, "Request already approved!");
            return;
        }
        else
        {
//            System.out.println("Hello");
            JOptionPane.showMessageDialog(null, "Suggestion,you should not approve this request", errorMsg,HEIGHT );
            JOptionPane.showMessageDialog(null, errorMsg);
//            JOptionPane.showMessageDialog(null, errorMsg);
        }  
        
        txtSoilType.setText("");
        txtSoilStructure.setText("");
        txtFertilizer.setText("");
    }//GEN-LAST:event_btnApproveActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        String errorMsg = "";
        boolean st = false;
        if((request.getOrganicCertification().getSoilType().getValue().equalsIgnoreCase("Fertile Soil") ||
            request.getOrganicCertification().getSoilType().getValue().equalsIgnoreCase("Nutricious Soil"))){
            st = true;
            System.out.println(st);
            errorMsg += "Soil Type should be Fertile/Nutricious\n ";
        }
        
        boolean ss = false;
        if((request.getOrganicCertification().getSoilStructure().getValue().equalsIgnoreCase("Granular") ||
            request.getOrganicCertification().getSoilStructure().getValue().equalsIgnoreCase("Crumb"))){
            ss = true;
            System.out.println(ss);
            errorMsg += "Soil Structure should be Granular/Crumb\n";
        }
        
        boolean ifFerti = false;
        if(!request.getOrganicCertification().isUsedFertilizersInLastThreeYears()){
            ifFerti = true;
            System.out.println(ifFerti);
            errorMsg += "Should not use Fertilizer in last three years";
        }
        
        if(st && ss && ifFerti){
            JOptionPane.showMessageDialog(null, "Suggestion,you should not reject this request", errorMsg,HEIGHT );
            JOptionPane.showMessageDialog(null, errorMsg);
            return;
        }
        else if(request.getStatus().equalsIgnoreCase("Rejected"))
        {
            JOptionPane.showMessageDialog(null, "Request already rejected!");
            return;
        }
        else
        {
            request.setIsCertified(false);
            request.setStatus("Rejected");
            request.setReceiver(userAccount);
            JOptionPane.showMessageDialog(null, "Request Rejected");
        } 
        txtSoilType.setText("");
        txtSoilStructure.setText("");
        txtFertilizer.setText("");
    }//GEN-LAST:event_btnRejectActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnReject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtFertilizer;
    private javax.swing.JTextField txtSoilStructure;
    private javax.swing.JTextField txtSoilType;
    // End of variables declaration//GEN-END:variables
}
